import logging
from aiogram import Bot, Dispatcher, executor, types
from sqliter import SQLiter

logging.basicConfig(level=logging.INFO)
import random

TOKEN = '948170738:AAF4VCIqAJCmBP-tzVnx11zRWZARJTxv118'
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)
db = SQLiter(
    'postgres://rsvuryejidlyzs:f824cdd6ae8af1fe80f3982809631e202b9972a8d3ac2382fc14a0d4361a1967@ec2-54-216-17-9.eu-west-1.compute.amazonaws.com:5432/d804h1sknk085j')
players = {}
WantToPlay = []
IsATTAKING = []
IsGameOn = []
LeftDistance = []
PersonAlive = []
CamelAlive = []
CamelHealth = []
PersonHealth = []
DistanceToBandits = []
CntWater = []
CntMeat = []
CntAct = []
Win = []
b = []

@dp.message_handler(commands=['start'])
async def welcome(message):
    # keyboard
    global WantToPlay
    global LeftDistance
    global PersonAlive
    global CamelHealth
    global CamelAlive
    global PersonHealth
    global DistanceToBandits
    global CntWater
    global CntMeat
    global CntAct
    global WantToPlay
    global IsGameOn
    global Win
    global b
    if message.chat.id in players:
        id = players[message.chat.id]
        WantToPlay[id] = True
        IsGameOn[id] = False
        LeftDistance[id] = 0
        PersonAlive[id] = True
        CamelAlive[id] = True
        CamelHealth[id] = 100
        PersonHealth[id] = 100
        DistanceToBandits[id] = 100
        CntWater[id] = 3
        CntMeat[id] = 3
        CntAct[id] = 1
        Win[id] = False
        LeftDistance[id] = random.randint(1200, 1200)
        b[id] = []
    else:
        players[message.chat.id] = len(WantToPlay)
        WantToPlay.append(True)
        IsGameOn.append(False)
        PersonAlive.append(True)
        IsATTAKING.append(-1)
        CamelAlive.append(True)
        PersonHealth.append(100)
        CamelHealth.append(100)
        DistanceToBandits.append(100)
        CntWater.append(3)
        CntMeat.append(3)
        CntAct.append(1)
        Win.append(False)
        LeftDistance.append(random.randint(1200, 1200))
        b.append([])

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–î–ê")
    item2 = types.KeyboardButton("–ù–ï–¢")
    markup.add(item1, item2)
    await bot.send_message(chat_id=message.chat.id, text=
    "–ü—Ä–∏–≤–µ—Ç {0.first_name}!\n–•–æ—á–µ—à—å –ø–æ–∏–≥—Ä–∞—Ç—å –≤ –ø—Ä–∏–∫–æ–ª—å–Ω—É—é –∏–≥—Ä—É?".format(message.from_user),
                           parse_mode='html', reply_markup=markup)


@dp.message_handler(content_types=['text'])
async def actions(message):
    if message.chat.id not in players:
        await bot.send_message(chat_id=message.chat.id,
                               text="–ù–∞–∂–º–∏ –Ω–∞ '/start' —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É")
        return
    ind = players[message.chat.id]
    global WantToPlay
    global IsATTAKING
    global IsGameOn
    if IsATTAKING[ind] != -1 and message.text == 'üç°': IsATTAKING[ind] = -1
    if IsATTAKING[ind] != -1:
        await ATTACK(ind)
        return
    if IsGameOn[ind]:
        await gameactions(message)
        return

    if message.chat.type == 'private':
        if message.text == '–î–ê':
            WantToPlay[ind] = True
            IsGameOn[ind] = True
            await bot.send_message(chat_id=message.chat.id, text="–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã:\n")
            await bot.send_message(chat_id=message.chat.id,
                                   text="–¢—ã –∑–∞—Å—Ç—Ä—è–ª –≤ –ø—É—Å—Ç—ã–Ω–µ, –∏ —Ç–µ–ø–µ—Ä—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –æ–∞–∑–∏—Å–∞, –Ω–æ –Ω–µ –≤—Å–µ —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ, –∑–∞ —Ç–æ–±–æ–π –≥–æ–Ω—è—Ç—Å—è –≥–æ–ª–æ–≤–æ—Ä–µ–∑—ã,–æ–Ω–∏ –∂–µ–ª–∞—é—Ç –ø–æ—Å–∫–æ—Ä–µ–µ –¥–æ–≥–Ω–∞—Ç—å —Ç–µ–±—è –∏ —É–±–∏—Ç—å, –ø–æ—ç—Ç–æ–º—É —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ—Ç–æ—Ä–æ–ø–∏—Ç—Å—è\n –ò –¥–∞ —Ç–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, –≤–µ–¥—å —É —Ç–µ–±—è –µ—Å—Ç—å –≤–µ—Ä–±–ª—é–¥")
            await gameactions(message)
            return

        if message.text == '–ù–ï–¢':
            if WantToPlay[ind] == True:
                await bot.send_message(chat_id=message.chat.id, text="–ù–ï –•–û–ß–ï–®–¨ –ò–ì–†–ê–¢–¨ –í –ú–û–Æ –ò–ì–†–£!?üò°üò°üò°üò°üò°\n")
                await bot.send_message(chat_id=message.chat.id, text="–î–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å –ø–µ—Ä–µ–¥—É–º–∞—Ç—å\n")
                await bot.send_message(chat_id=message.chat.id, text="–•–æ—á–µ—à—å –∏–≥—Ä–∞—Ç—å –≤ –º–æ—é –∏–≥—Ä—É????????")
                WantToPlay[ind] = False
            else:
                IsATTAKING[ind] = message.chat.id
                await ATTACK(ind)

            return
        await bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –∏–∑ –º–µ–Ω—é")


def add_db(user_id, points):
    if (not db.player_exists(user_id)):
        db.add_player(user_id, points)
    else:
        if (db.get_points(user_id) > points):
            db.update_points(user_id, points)


async def ATTACK(ind):
    global IsATTAKING
    if IsATTAKING[ind] != -1:
        await bot.send_message(chat_id=IsATTAKING[ind], text="–¢—ã –≤ –±–∞–Ω–µ, –∏–¥–∏ –≤ –±–∞–Ω—é ")


async def gameactions(message):
    ind = players[message.chat.id]
    global LeftDistance
    global PersonAlive
    global CamelHealth
    global CamelAlive
    global PersonHealth
    global DistanceToBandits
    global CntWater
    global CntMeat
    global CntAct
    global Win
    global b
    CntAct[ind] += 1
    HasAction = True

    if Win[ind]:
        await bot.send_message(chat_id=message.chat.id, text="–í—ã –ø–æ–±–µ–¥–∏–ª–∏, —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –µ—â–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ '/start'")
        return
    if PersonAlive[ind]:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

        f = LeftDistance[ind]
        if message.text == '–ï—Ö–∞—Ç—å –±—ã—Å—Ç—Ä–æ –Ω–∞ –≤–µ—Ä–±–ª—é–¥–µ' and CamelAlive[ind] == True:
            CamelHealth[ind] -= random.randint(20, 30)
            PersonHealth[ind] -= random.randint(15, 20)
            LeftDistance[ind] -= random.randint(50, 70)
        elif message.text == '–ï—Ö–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞ –≤–µ—Ä–¥–±–ª—é–¥–µ' and CamelAlive[ind] == True:
            CamelHealth[ind] += random.randint(0, 5)
            PersonHealth[ind] -= random.randint(10, 15)
            LeftDistance[ind] -= random.randint(30, 40)
        elif message.text == '–ò–¥—Ç–∏ –ø–µ—à–∫–æ–º':
            CamelHealth[ind] += random.randint(5, 15)
            PersonHealth[ind] -= random.randint(5, 7)
            LeftDistance[ind] -= random.randint(25, 35)
        elif message.text == '–í—ã–ø–∏—Ç—å –≤–æ–¥—ã' and CntWater[ind] > 0:
            CamelHealth[ind] += random.randint(50, 60)
            PersonHealth[ind] += random.randint(50, 70)
            CntWater[ind] -= 1
        elif message.text == '–°—ä–µ—Å—Ç—å –º—è—Å–æ' and CamelAlive[ind] == False and CntMeat[ind] > 0:
            PersonHealth[ind] = 100
            CntMeat[ind] -= 1
        elif message.text == '–û—Ç–¥—ã—Ö–∞—Ç—å':
            CamelHealth[ind] += random.randint(40, 50)
            PersonHealth[ind] += random.randint(20, 30)
        elif message.text == '–ë–µ–∂–∞—Ç—å' and CamelAlive[ind] == False:
            PersonHealth[ind] -= random.randint(20, 30)
            LeftDistance[ind] -= random.randint(40, 45)
        elif message.text == "–û–ø–∏—Å–∞–Ω–∏–µ":
            st = "–ò—Ç–∞–∫ –≤ —ç—Ç–æ–π –∏–≥—Ä–µ —É –≤–∞—Å –∏ –≤–∞—à–µ–≥–æ –≤–µ—Ä–±–ª—é–¥–∞ –ø–æ 100 –µ–¥–∏–Ω–∏—Ü –∑–¥–æ—Ä–≤—å—è –ø—Ä–∏ –∏–∑—Ä–∞—Å—Ö–æ–¥–æ–≤–∞–Ω–∏–∏ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –∏–ª–∏ –≤–∞—à –≤–µ—Ä–±–ª—é–¥ —É–º–∏—Ä–∞—é—Ç\n<b>–û–ø–∏—Å—ã–≤–∞—é –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            if b[ind].count("–ï—Ö–∞—Ç—å –±—ã—Å—Ç—Ä–æ –Ω–∞ –≤–µ—Ä–±–ª—é–¥–µ") == 1:
                st += '\n'
                st += '<b>–ï—Ö–∞—Ç—å –±—ã—Å—Ç—Ä–æ –Ω–∞ –≤–µ—Ä–±–ª—é–¥–µ</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –í–ï–†–ë–õ–Æ–î–ê <b>—É–º–µ–Ω—å—à–∞–µ—Ç—Å—è</b> –Ω–∞ 20 - 30\n"
                st += "2)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–º–µ–Ω—å—à–∞–µ—Ç—Å—è</b> –Ω–∞ 15 - 20\n"
                st += "3)–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –¥–∏—Å—Ç–∞–Ω–∏—Ü–∏—é 50 - 70\n"
            if b[ind].count('–ï—Ö–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞ –≤–µ—Ä–¥–±–ª—é–¥–µ') == 1:
                st += '\n'
                st += '<b>–ï—Ö–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞ –≤–µ—Ä–¥–±–ª—é–¥–µ</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –í–ï–†–ë–õ–Æ–î–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 0 - 5\n"
                st += "2)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–º–µ–Ω—å—à–∞–µ—Ç—Å—è</b> –Ω–∞ 10 - 15\n"
                st += "3)–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –¥–∏—Å—Ç–∞–Ω–∏—Ü–∏—é 30 - 40\n"
            if b[ind].count('–ò–¥—Ç–∏ –ø–µ—à–∫–æ–º') == 1:
                st += '\n'
                st += '<b>–ò–¥—Ç–∏ –ø–µ—à–∫–æ–º</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –í–ï–†–ë–õ–Æ–î–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 5 - 15\n"
                st += "2)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–º–µ–Ω—å—à–∞–µ—Ç—Å—è</b> –Ω–∞ 5 - 7\n"
                st += "3)–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –¥–∏—Å—Ç–∞–Ω–∏—Ü–∏—é 25 - 35\n"
            if b[ind].count('–í—ã–ø–∏—Ç—å –≤–æ–¥—ã') == 1:
                st += '\n'
                st += '<b>–í—ã–ø–∏—Ç—å –≤–æ–¥—ã</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –í–ï–†–ë–õ–Æ–î–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 50 - 60\n"
                st += "2)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 50 - 70\n"
            if b[ind].count('–°—ä–µ—Å—Ç—å –º—è—Å–æ') == 1:
                st += '\n'
                st += '<b>–°—ä–µ—Å—Ç—å –º—è—Å–æ</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –¥–æ 100\n"
            if b[ind].count('–û—Ç–¥—ã—Ö–∞—Ç—å') == 1:
                st += '\n'
                st += '<b>–û—Ç–¥—ã—Ö–∞—Ç—å</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –í–ï–†–ë–õ–Æ–î–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 40 - 50\n"
                st += "2)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è</b> –Ω–∞ 20 - 30\n"
            if b[ind].count('–ë–µ–∂–∞—Ç—å') == 1:
                st += '\n'
                st += '<b>–ë–µ–∂–∞—Ç—å</b>\n'
                st += "1)–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–æ—Ä–æ–≤—å—è –ü–ï–†–°–û–ù–ê–ñ–ê <b>—É–º–µ–Ω—å—à–∞–µ—Ç—Å—è</b> –Ω–∞ 20 - 30\n"
                st += "2)–ü—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç –¥–∏—Å—Ç–∞–Ω–∏—Ü–∏—é 40 - 45\n"
            st += '\n'
            st += '\n'
            st += "<b>–°–∏—Å—Ç–µ–º–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:</b>\n"
            st += "–î–ª—è –≤–µ—Ä–±–ª—é–¥–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∫–æ–≥–¥–∞ –∏—Ö –∑–¥–æ—Ä–æ–≤—å–µ –º–µ–Ω—å—à–µ 30"
            await bot.send_message(chat_id=message.chat.id, text=st, parse_mode='html')
            HasAction = False
        else:
            await bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ —á—Ç–æ-—Ç–æ –∏–∑ –º–µ–Ω—é")
            HasAction = False
        a = ""
        PersonHealth[ind] = min(100, PersonHealth[ind])
        CamelHealth[ind] = min(100, CamelHealth[ind])
        if CamelHealth[ind] <= 0 and CamelAlive[ind] == True:
            CamelAlive[ind] = False
            a += "üò•–ö –º–æ–µ–º—É —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤–∞—à –≤–µ—Ä–±–ª—é–¥ —É–º–µ—Ä –∏ –Ω–æ –∑–∞—Ç–æ —É –≤–∞—Å –ø–æ—è–≤–∏–ª—Å—è –Ω–æ–≤—ã–π —Ä–µ—Å—É—Ä—Å –ú–Ø–°–û\n"
        if PersonHealth[ind] <= 0 and PersonAlive[ind] == True:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            item1 = types.KeyboardButton("/start")
            markup.add(item1)
            PersonAlive[ind] = False
            await bot.send_message(chat_id=message.chat.id,
                                   text="–ö –º–æ–µ–º—É —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã —É–º–µ—Ä–ª–∏ –æ—Ç —É—Å—Ç–∞–ª–æ—Å—Ç–∏, –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É –∑–∞–Ω–∞–≤–æ –æ–ø—Ä–∞–≤–∏–≤ '/start'",
                                   reply_markup=markup)
            return
        if (LeftDistance[ind] <= 0 and PersonAlive[ind] == True):
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            item1 = types.KeyboardButton("üòâ–•–æ—Ä–æ—à–æ")

            markup.add(item1)
            await bot.send_message(chat_id=message.chat.id,
                                   text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—ã –ø–æ–±–µ–¥–∏–ª–∏ –∏ –¥–æ—Ä–∞–±—Ä–∞–ª–∏—Å—å –¥–æ –æ–∞–∑–∏–∑–∞ –∑–∞ " + str(
                                       CntAct[
                                           ind] - 1) + " –¥–Ω–µ–π" + "\n–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –º–æ—è –∏–≥—Ä–∞ —Ç–æ –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—Å—è –µ–π —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏\n",
                                   reply_markup=markup)
            Win[ind] = True
            N = "{0.username}".format(message.from_user)
            lastVal = db.get_points(N)
            newVal = min(lastVal, CntAct[ind] - 1)
            if lastVal > newVal:
                await bot.send_message(chat_id=message.chat.id, text="–ù–µ–ø–ª–æ—Ö–æ —Ç—ã –ø–æ–±–∏–ª —Å–≤–æ–π –ø—Ä–æ—à–ª—ã–π —Ä–µ–∫–æ—Ä–¥ " + str(
                    lastVal) + "\n–¢–µ–ø–µ—Ä—å —Ç–≤–æ–π —Ä–µ–∫–æ—Ä–¥ " + newVal + "\n")
            add_db(N, newVal)
            db.commit()
            newList = db.get_players()
            st = "–¢–æ–ø 3 –∏–≥—Ä–æ–∫–æ–≤:\n"
            sz = len(newList)
            id = 0
            while sz != id and (id) < 3:
                st += "<b>" + str(newList[id][0]) + "</b>" + " –ø—Ä–æ—à–µ–ª –∏–≥—Ä—É –∑–∞ " + str(newList[id][1]) + " –¥–Ω–µ–π" + "\n"
                id += 1
            await bot.send_message(chat_id=message.chat.id, text=st + "\n", parse_mode='html')
            return
        DistanceToBandits[ind] += f - LeftDistance[ind]
        if HasAction == True:
            DistanceToBandits[ind] -= random.randint(40, 50)
        if DistanceToBandits[ind] <= 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            item1 = types.KeyboardButton("/start")
            markup.add(item1)
            PersonAlive[ind] = False
            await bot.send_message(chat_id=message.chat.id,
                                   text="–ö –º–æ–µ–º—É —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏ –±–∞–Ω–¥–∏—Ç—ã, –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É –∑–∞–Ω–∞–≤–æ –Ω–∞–∂–∞–≤ –Ω–∞ '/start'",
                                   reply_markup=markup)
            return

        if CamelHealth[ind] <= 30 and CamelAlive[ind] == True:
            a += "üê™ <b>–í–∞—à –≤–µ—Ä–±–ª—é–¥ —É—Å—Ç–∞–µ—Ç –µ–º—É —Å–ª–µ–¥—É–µ—Ç –û–¢–î–û–•–ù–£–¢–¨</b> üê™\n".format()
        if PersonHealth[ind] <= 30:
            a += "üö∂ <b>–í—ã —É—Å—Ç–∞–µ—Ç–µ –≤–∞–º —Å–ª–µ–¥—É–µ—Ç –û–¢–î–û–•–ù–£–¢–¨</b> üö∂\n".format()
        b[ind].clear()
        item1 = types.KeyboardButton("–ï—Ö–∞—Ç—å –±—ã—Å—Ç—Ä–æ –Ω–∞ –≤–µ—Ä–±–ª—é–¥–µ")
        item2 = types.KeyboardButton("–ï—Ö–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ –Ω–∞ –≤–µ—Ä–¥–±–ª—é–¥–µ")
        item6 = types.KeyboardButton("–û—Ç–¥—ã—Ö–∞—Ç—å")
        item7 = types.KeyboardButton("–ë–µ–∂–∞—Ç—å")
        item3 = types.KeyboardButton("–ò–¥—Ç–∏ –ø–µ—à–∫–æ–º")
        item4 = types.KeyboardButton("–í—ã–ø–∏—Ç—å –≤–æ–¥—ã")
        item5 = types.KeyboardButton("–°—ä–µ—Å—Ç—å –º—è—Å–æ")
        markup.add(item3, item6)
        b[ind].append(item3.text)
        b[ind].append(item6.text)
        if HasAction == False: CntAct[ind] -= 1
        a += "‚òÄ–î–µ–Ω—å " + str(CntAct[ind]) + "\n"
        a += "üíß–í–û–î–ê " + str(CntWater[ind]) + " —à—Ç" + "\n"
        if CamelAlive[ind] == False:
            a += "ü•©–ú–Ø–°–û " + str(CntMeat[ind]) + " —à—Ç" + "\n"
        if CamelAlive[ind] == True:
            markup.add(item1)
            b[ind].append(item1.text)
            markup.add(item2)
            b[ind].append(item2.text)
        else:
            markup.add(item5, item7)
            if (CntMeat[ind] > 0):
                b[ind].append(item5.text)
            b[ind].append(item7.text)
        if CntWater[ind] > 0:
            markup.add(item4)
            b[ind].append(item4.text)
        item8 = types.KeyboardButton("–û–ø–∏—Å–∞–Ω–∏–µ")
        markup.add(item8)
        a += "üë≥üèª‚Äç‚ôÇÔ∏è–ë–∞–Ω–¥–∏—Ç–∞–º –¥–æ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å " + str(DistanceToBandits[ind]) + "–∫–º\n"
        a += "‚õ≤Ô∏è–î–æ –æ–∞–∑–∏—Å–∞ –æ—Å—Ç–∞–ª–æ—Å—å " + str(LeftDistance[ind]) + "–∫–º"
        await bot.send_message(chat_id=message.chat.id, text=a, reply_markup=markup, parse_mode='html')
    else:
        await bot.send_message(chat_id=message.chat.id, text="–í—ã —É–º–µ—Ä–ª–∏, –Ω–∞—á–Ω–∏—Ç–µ –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ –Ω–∞–∂–∞–≤ –Ω–∞ '/start'")


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
